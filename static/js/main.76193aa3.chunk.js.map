{"version":3,"sources":["module/contacts/action.js","module/asyncRedux/actionLoader.js","module/asyncRedux/actionErrors.js","module/asyncRedux/actionContacts.js","module/contactsSelectors.js","components/ContactForm/ContactForm.js","module/filter/action.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","module/contacts/reducer.js","module/filter/reducer.js","module/asyncRedux/reducerLoader.js","module/asyncRedux/reducerError.js","module/rootModule.js","module/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["addContact","createAction","deleteContacts","getLocalStorage","requestAddContactStart","requestAddContactSucsses","deleteContactStart","deleteContactSucsses","requestContactError","requestContactErrorReset","deleteContactError","deleteContactErrorReset","option","headers","contactsSelector","state","contacts","loaderSelector","loader","errorSelector","error","formInitial","name","number","ContactForm","useState","form","setForm","dispatch","useDispatch","useSelector","contactsId","shortid","generate","inputHandlerContact","e","target","value","className","classes","autoComplete","onSubmit","preventDefault","payload","find","contact","toLocaleLowerCase","toast","a","axios","post","result","data","htmlFor","id","type","onChange","inputHandlerFilters","Filter","TransitionGroup","length","CSSTransition","timeout","classNames","mountOnEnter","unmountOnExit","Contact","onClick","delete","asyncDeleteContact","ContactList","filter","filterSelector","errorAxios","filteredContacts","includes","getFilterContacts","color","height","width","component","map","key","App","this","props","loaderStart","Axios","get","then","resp","loaderSucsses","catch","in","Component","connect","contactsReducer","createReducer","action","filterReducer","loaderReducer","ErrorReducer","rootReducer","combineReducers","middleware","thunk","compose","composeWithDevTools","applyMiddleware","store","configureStore","reducer","rootModule","devTools","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76193aa3.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\");\r\n\r\nexport const deleteContacts = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const getLocalStorage = createAction(\"GET_LOCALSTORAGE\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const requestAddContactStart = createAction(\"REQUEST_ADD_CONTACT_START\");\r\nexport const requestAddContactSucsses = createAction(\r\n  \"REQUEST_ADD_CONTACT_SUCSSES\",\r\n);\r\n\r\nexport const deleteContactStart = createAction(\"DELETE_CONTACT_START\");\r\nexport const deleteContactSucsses = createAction(\"DELETE_CONTACT_SUCSSES\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const requestContactError = createAction(\"REQUEST_CONTACT_ERROR\");\r\nexport const requestContactErrorReset = createAction(\r\n  \"REQUEST_CONTACT_ERROR_RESET\",\r\n);\r\n\r\nexport const deleteContactError = createAction(\"DELETE_CONTACT_ERROR\");\r\nexport const deleteContactErrorReset = createAction(\r\n  \"DELETE_CONTACT_ERROR_RESET\",\r\n);\r\n","import axios from \"axios\";\r\nimport { addContact, deleteContacts } from \"../contacts/action\";\r\nimport {\r\n  requestAddContactStart,\r\n  requestAddContactSucsses,\r\n  deleteContactStart,\r\n  deleteContactSucsses,\r\n} from \"./actionLoader\";\r\nimport {\r\n  requestContactError,\r\n  requestContactErrorReset,\r\n  deleteContactErrorReset,\r\n  deleteContactError,\r\n} from \"./actionErrors\";\r\n\r\nconst option = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const asyncAddContact = (payload) => async (dispatch) => {\r\n  dispatch(requestAddContactStart());\r\n  try {\r\n    dispatch(requestContactErrorReset());\r\n    const result = await axios.post(\r\n      \"http://localhost:3000/contacts\",\r\n      payload,\r\n      option,\r\n    );\r\n    dispatch(addContact(result.data));\r\n  } catch (error) {\r\n    dispatch(requestContactError());\r\n  } finally {\r\n    dispatch(requestAddContactSucsses());\r\n  }\r\n};\r\n\r\nexport const asyncDeleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactStart());\r\n  try {\r\n    dispatch(deleteContactErrorReset());\r\n    await axios.delete(`http://localhost:3000/contacts/${id}`);\r\n    dispatch(deleteContacts(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError());\r\n  } finally {\r\n    dispatch(deleteContactSucsses());\r\n  }\r\n};\r\n","export const contactsSelector = (state) => state.contacts;\r\nexport const filterSelector = (state) => state.filter;\r\nexport const loaderSelector = (state) => state.loader;\r\nexport const errorSelector = (state) => state.error;\r\n","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { asyncAddContact } from \"../../module/asyncRedux/actionContacts\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport classes from \"./ContactForm.module.css\";\r\nimport { contactsSelector } from \"../../module/contactsSelectors\";\r\n\r\nconst formInitial = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [form, setForm] = useState(formInitial);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => contactsSelector(state));\r\n\r\n  const notifyB = () => {\r\n    toast(`${form.name} is already in contacts`);\r\n  };\r\n\r\n  const contactsId = shortid.generate();\r\n\r\n  const inputHandlerContact = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const addToContacts = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    if (\r\n      contacts.find(\r\n        (contact) =>\r\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\r\n      )\r\n    ) {\r\n      notifyB();\r\n    } else {\r\n      dispatch(asyncAddContact(form));\r\n      setForm(formInitial);\r\n    }\r\n    setForm(formInitial);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.form}>\r\n      <form autoComplete=\"off\" onSubmit={addToContacts}>\r\n        <label className={classes[\"label-name\"]} htmlFor={contactsId}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            id={contactsId}\r\n            type=\"text\"\r\n            value={form.name}\r\n            onChange={inputHandlerContact}\r\n          />\r\n        </label>\r\n\r\n        <label className={classes[\"label-name\"]}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={form.number}\r\n            onChange={inputHandlerContact}\r\n          />\r\n        </label>\r\n\r\n        <div>\r\n          <button type=\"submit\">Add contact</button>\r\n          <ToastContainer />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const inputHandlerFilters = createAction(\"INPUT_FILTER\");\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { inputHandlerFilters } from \"../../module/filter/action\";\r\n\r\nimport \"./Filter.css\";\r\nimport { contactsSelector } from \"../../module/contactsSelectors\";\r\n\r\nconst Filter = () => {\r\n  const contacts = useSelector((state) => contactsSelector(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandlerFilter = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(inputHandlerFilters(value));\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup>\r\n      {contacts.length > 1 && (\r\n        <CSSTransition\r\n          timeout={250}\r\n          classNames=\"filter\"\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"filter\">\r\n            <p>Find contacts by name</p>\r\n            <input name=\"filter\" type=\"text\" onChange={inputHandlerFilter} />\r\n          </div>\r\n        </CSSTransition>\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { asyncDeleteContact } from \"../../module/asyncRedux/actionContacts\";\r\n\r\nconst Contact = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n  const deleteContact = () => dispatch(asyncDeleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      <p>{name}</p>\r\n      <p>{number}</p>\r\n\r\n      <button type=\"button\" id={id} className=\"delete\" onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nimport \"./ContactList.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  contactsSelector,\r\n  filterSelector,\r\n  loaderSelector,\r\n  errorSelector,\r\n} from \"../../module/contactsSelectors\";\r\nconst ContactList = () => {\r\n  const contacts = useSelector((state) => contactsSelector(state));\r\n  const filter = useSelector((state) => filterSelector(state));\r\n  const loader = useSelector((state) => loaderSelector(state));\r\n  const errorAxios = useSelector((state) => errorSelector(state));\r\n\r\n  const getFilterContacts = (filter, contacts) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n    );\r\n  const filteredContacts = getFilterContacts(filter, contacts);\r\n\r\n  return (\r\n    <div>\r\n      {loader ? (\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      ) : (\r\n        <TransitionGroup component=\"ul\">\r\n          {filteredContacts.length\r\n            ? filteredContacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact.id}\r\n                  classNames=\"list-item\"\r\n                  timeout={250}\r\n                  mountOnEnter\r\n                  unmountOnExit\r\n                >\r\n                  <li className=\"list-item\">\r\n                    <Contact {...contact} />\r\n                  </li>\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact.name}\r\n                  classNames=\"list-item\"\r\n                  timeout={250}\r\n                  mountOnEnter\r\n                  unmountOnExit\r\n                >\r\n                  <li className=\"list-item\">\r\n                    <Loader\r\n                      type=\"Puff\"\r\n                      color=\"#00BFFF\"\r\n                      height={100}\r\n                      width={100}\r\n                      timeout={3000} //3 secs\r\n                    />\r\n                    <Contact {...contact} />\r\n                  </li>\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      )}\r\n      {errorAxios && <p>...UPS, Plisse refresh</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Axios from \"axios\";\nimport { addContact } from \"./module/contacts/action\";\nimport {\n  contactsSelector,\n  errorSelector,\n  loaderSelector,\n} from \"./module/contactsSelectors\";\nimport { requestContactError } from \"./module/asyncRedux/actionErrors\";\nimport {\n  requestAddContactStart,\n  requestAddContactSucsses,\n} from \"./module/asyncRedux/actionLoader\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.loaderStart();\n    Axios.get(\"http://localhost:3000/contacts\")\n      .then((resp) =>\n        resp.data.map((contact) => this.props.addContact(contact)),\n      )\n      .then(() => this.props.loaderSucsses())\n      .catch((error) => this.props.error());\n  }\n\n  render() {\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          classNames=\"phonebook\"\n          timeout={500}\n          mountOnEnter\n          unmountOnExit\n        >\n          <div className=\"phonebook\">\n            <h1>Phonebook</h1>\n          </div>\n        </CSSTransition>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  contacts: contactsSelector(state),\n  error: errorSelector(state),\n  loader: loaderSelector(state),\n});\nconst mapDispatch = (dispatch) => ({\n  addContact: (value) => dispatch(addContact(value)),\n  error: () => dispatch(requestContactError()),\n  loaderStart: () => dispatch(requestAddContactStart()),\n  loaderSucsses: () => dispatch(requestAddContactSucsses()),\n});\n\nexport default connect(mapState, mapDispatch)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContacts, getLocalStorage } from \"./action\";\r\n\r\n\r\nconst initialState = [];\r\nexport const contactsReducer = createReducer(initialState, {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContacts]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n  [getLocalStorage]: (state, action) =>\r\n    !action.payload ? state : action.payload,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { inputHandlerFilters } from \"../filter/action\";\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [inputHandlerFilters]: (state, action) => action.payload,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  requestAddContactStart,\r\n  requestAddContactSucsses,\r\n  deleteContactStart,\r\n  deleteContactSucsses,\r\n} from \"./actionLoader\";\r\n\r\nconst initialLoader = false;\r\nexport const loaderReducer = createReducer(initialLoader, {\r\n  [requestAddContactStart]: (state) => (state = true),\r\n  [requestAddContactSucsses]: (state) => (state = false),\r\n  [deleteContactStart]: (state) => (state = true),\r\n  [deleteContactSucsses]: (state) => (state = false),\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  requestContactError,\r\n  requestContactErrorReset,\r\n  deleteContactError,\r\n  deleteContactErrorReset,\r\n} from \"./actionErrors\";\r\n\r\nconst initialError = false;\r\nexport const ErrorReducer = createReducer(initialError, {\r\n  [requestContactError]: (state) => (state = true),\r\n  [requestContactErrorReset]: (state) => (state = false),\r\n  [deleteContactError]: (state) => (state = true),\r\n  [deleteContactErrorReset]: (state) => (state = false),\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { contactsReducer } from \"./contacts/reducer\";\r\nimport { filterReducer } from \"./filter/reducer\";\r\nimport { loaderReducer } from \"./asyncRedux/reducerLoader\";\r\nimport { ErrorReducer } from \"./asyncRedux/reducerError\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: ErrorReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, applyMiddleware } from \"@reduxjs/toolkit\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootModule from \"./rootModule\";\r\n\r\nconst middleware = [thunk];\r\nconst compose = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nconst store = configureStore({\r\n  reducer: rootModule,\r\n  devTools: compose,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n// import store from \"./redux/store/store\";\nimport store from \"./module/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3vQn1\",\"label-name\":\"ContactForm_label-name__24IFV\"};"],"sourceRoot":""}